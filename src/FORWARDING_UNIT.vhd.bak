LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity FORWARDING_UNITY is
	Rs1, Rs2: in   std_logic_vector(4 downto 0);
	rd_EX_MEM:in   std_logic_vector(4 downto 0);
	rd_MEM_WB:in   std_logic_vector(4 downto 0);
	RegWrite_EX_MEM, RegWrite_MEM_WB: in std_logic;
	ForwardA, ForwardB:std_logic_vector(1 downto 0)
end entity;

architecture beh of FORWARDING_UNITY is

begin

	A_forward: process(Rs1, Rs2, rd_EX_MEM, RegWrite_MEM_WB)
	begin
		if Rs1=rd_EX_MEM and RegWrite_EX_MEM='1' and  rd_EX_MEM /= '0'
		then
			ForwardA<="10";
		elsif Rs1=rd_MEM_WB and RegWrite_MEM_WB='1' and  rd_MEM_WB /= '0'
			ForwardA<="01";
		else
			ForwardA<="00";
		end if;
	end process;
	
	B_forward: process(Rs1, Rs2, rd_EX_MEM, RegWrite_MEM_WB)
	begin
		if Rs2=rd_EX_MEM and RegWrite_EX_MEM='1' and  rd_EX_MEM /= '0'
		then
			ForwardB<="10";
		elsif Rs2=rd_MEM_WB and RegWrite_MEM_WB='1' and  rd_MEM_WB /= '0'
			ForwardB<="01";
		else
			ForwardB<="00";
		end if;
	end process;

end beh;